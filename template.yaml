Resources:
  employee:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  ListEmployees:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: ListEmployees
      CodeUri: src/ListEmployees
      Handler: Handler::handleRequest
      Runtime: java11
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Ref employee
          TABLE_ARN: !GetAtt employee.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref employee
      Events:
        EmployeeManagementAPIGETemployees:
          Type: Api
          Properties:
            Path: /employees
            Method: GET
            RestApiId: !Ref EmployeeManagementAPI
  ListEmployeesLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${ListEmployees}
  CreateEmployee:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: CreateEmployee
      CodeUri: src/CreateEmployee
      Handler: Handler::handleRequest
      Runtime: java11
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Ref employee
          TABLE_ARN: !GetAtt employee.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref employee
      Events:
        EmployeeManagementAPIPOSTemployee:
          Type: Api
          Properties:
            Path: /employee
            Method: POST
            RestApiId: !Ref EmployeeManagementAPI
  CreateEmployeeLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreateEmployee}
  EmployeeManagementAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: EmployeeManagementAPI
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /employees:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListEmployees.Arn}/invocations
              responses: {}
          /employee:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateEmployee.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
Transform: AWS::Serverless-2016-10-31